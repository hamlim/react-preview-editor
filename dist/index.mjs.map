{"version":3,"file":"index.mjs","sources":["../node_modules/prism-react-renderer/es/vendor/prism/prism-core.js","../node_modules/prism-react-renderer/es/vendor/prism/index.js","../node_modules/prism-react-renderer/es/defaultProps.js","../node_modules/prism-react-renderer/es/utils/normalizeTokens.js","../node_modules/prism-react-renderer/es/utils/themeToDict.js","../node_modules/prism-react-renderer/es/components/Highlight.js","../node_modules/react-simple-code-editor/lib/index.js","../src/index.js"],"sourcesContent":["/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\n\n/**\r\n * prism-react-renderer:\r\n * This file has been modified to remove:\r\n * - globals and window dependency\r\n * - worker support\r\n * - highlightAll and other element dependent methods\r\n * - _.hooks helpers\r\n * - UMD/node-specific hacks\r\n * It has also been run through prettier\r\n */\nvar Prism = function () {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\r\n       * Insert a token before another token in a language literal\r\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n       * we cannot just provide an object, we need anobject and a key.\r\n       * @param inside The key (or language id) of the parent\r\n       * @param before The key to insert before. If not provided, the function appends instead.\r\n       * @param insert Object with the key/value pairs to insert\r\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      env.tokens = _.tokenize(env.code, env.grammar);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Donâ€™t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n            if (delNum != 1) _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            if (oneshot) break;\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n\nmodule.exports = Prism;\nPrism.default = Prism;","import Prism from './prism-core';\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /(^|[^\\\\])[\"']/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  var insideString = {\n    variable: [// Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        variable: [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        operator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        punctuation: /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // Command Substitution\n    {\n      pattern: /\\$\\([^)]+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        variable: /^\\$\\(|^`|\\)$|`$/\n      }\n    }, /\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\])#.*/,\n      lookbehind: true\n    },\n    'string': [//Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: true,\n      inside: insideString\n    }],\n    'variable': insideString.variable,\n    // Originally based on http://ss64.com/bash/\n    'function': {\n      pattern: /(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'operator': /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n  };\n  var inside = insideString.variable[1].inside;\n  inside.string = Prism.languages.bash.string;\n  inside['function'] = Prism.languages.bash['function'];\n  inside.keyword = Prism.languages.bash.keyword;\n  inside['boolean'] = Prism.languages.bash['boolean'];\n  inside.operator = Prism.languages.bash.operator;\n  inside.punctuation = Prism.languages.bash.punctuation;\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /[a-z0-9_]+(?=\\()/i,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'operator': /-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,\n  'number': /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight the path of the include statement as a string\n      'string': {\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n        lookbehind: true\n      },\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['class-name'];\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\nPrism.languages.cpp = Prism.languages.extend('c', {\n  'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'operator': /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n});\nPrism.languages.insertBefore('cpp', 'keyword', {\n  'class-name': {\n    pattern: /(class\\s+)\\w+/i,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('cpp', 'string', {\n  'raw-string': {\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n    alias: 'string',\n    greedy: true\n  }\n});\n/* \"prismjs/components/prism-css\" */\n\nPrism.languages.css = {\n  'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n  'atrule': {\n    pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  'url': /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n  'selector': /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n  'string': {\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n  'important': /\\B!important\\b/i,\n  'function': /[-a-z0-9]+(?=\\()/i,\n  'punctuation': /[(){};:]/\n};\nPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('markup', 'tag', {\n    'style': {\n      pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n      lookbehind: true,\n      inside: Prism.languages.css,\n      alias: 'language-css',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'style-attr': {\n      pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n      inside: {\n        'attr-name': {\n          pattern: /^\\s*style/i,\n          inside: Prism.languages.markup.tag.inside\n        },\n        'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n        'attr-value': {\n          pattern: /.+/i,\n          inside: Prism.languages.css\n        }\n      },\n      alias: 'language-css'\n    }\n  }, Prism.languages.markup.tag);\n}\n/* \"prismjs/components/prism-javascript\" */\n\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n  'number': /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n    alias: 'function'\n  },\n  'constant': /\\b[A-Z][A-Z\\d_]*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\${[^}]+}/,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: null // See below\n\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\nPrism.languages.javascript['template-string'].inside['interpolation'].inside.rest = Prism.languages.javascript;\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('markup', 'tag', {\n    'script': {\n      pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n      alias: 'language-javascript',\n      greedy: true\n    }\n  });\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') {} else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n})(Prism);\n/* \"prismjs/components/prism-actionscript\" */\n\n\nPrism.languages.actionscript = Prism.languages.extend('javascript', {\n  'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n  'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n});\nPrism.languages.actionscript['class-name'].alias = 'function';\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('actionscript', 'string', {\n    'xml': {\n      pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.markup\n      }\n    }\n  });\n}\n/* \"prismjs/components/prism-css-extras\" */\n\n\nPrism.languages.css.selector = {\n  pattern: /[^{}\\s][^{}]*(?=\\s*\\{)/,\n  inside: {\n    'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n    'pseudo-class': /:[-\\w]+(?:\\(.*\\))?/,\n    'class': /\\.[-:.\\w]+/,\n    'id': /#[-:.\\w]+/,\n    'attribute': /\\[[^\\]]+\\]/\n  }\n};\nPrism.languages.insertBefore('css', 'function', {\n  'hexcode': /#[\\da-f]{3,8}/i,\n  'entity': /\\\\[\\da-f]{1,8}/i,\n  'number': /[\\d%.]+/\n});\n/* \"prismjs/components/prism-diff\" */\n\nPrism.languages.diff = {\n  'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n  /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n  /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n  /^\\d+.*$/m],\n  // Match inserted and deleted lines. Support both +/- and >/< styles.\n  'deleted': /^[-<].*$/m,\n  'inserted': /^[+>].*$/m,\n  // Match \"different\" lines (prefixed with \"!\") in context diff.\n  'diff': {\n    'pattern': /^!(?!!).+$/m,\n    'alias': 'important'\n  }\n};\n/* \"prismjs/components/prism-docker\" */\n\nPrism.languages.docker = {\n  'keyword': {\n    pattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/mi,\n    lookbehind: true\n  },\n  'string': /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n  'comment': /#.*/,\n  'punctuation': /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n};\nPrism.languages.dockerfile = Prism.languages.docker;\n/* \"prismjs/components/prism-elixir\" */\n\nPrism.languages.elixir = {\n  'comment': {\n    pattern: /#.*/m,\n    lookbehind: true\n  },\n  // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n  'regex': {\n    pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n    greedy: true\n  },\n  'string': [{\n    // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n    pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n    greedy: true,\n    inside: {}\n  }, {\n    pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n    greedy: true,\n    inside: {}\n  }, {\n    // Multi-line strings are allowed\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {}\n  }],\n  'atom': {\n    // Look-behind prevents bad highlighting of the :: operator\n    pattern: /(^|[^:]):\\w+/,\n    lookbehind: true,\n    alias: 'symbol'\n  },\n  // Look-ahead prevents bad highlighting of the :: operator\n  'attr-name': /\\w+:(?!:)/,\n  'capture': {\n    // Look-behind prevents bad highlighting of the && operator\n    pattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'argument': {\n    // Look-behind prevents bad highlighting of the && operator\n    pattern: /(^|[^&])&\\d+/,\n    lookbehind: true,\n    alias: 'variable'\n  },\n  'attribute': {\n    pattern: /@\\w+/,\n    alias: 'variable'\n  },\n  'number': /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n  'keyword': /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n  'boolean': /\\b(?:true|false|nil)\\b/,\n  'operator': [/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/, {\n    // We don't want to match <<\n    pattern: /([^<])<(?!<)/,\n    lookbehind: true\n  }, {\n    // We don't want to match >>\n    pattern: /([^>])>(?!>)/,\n    lookbehind: true\n  }],\n  'punctuation': /<<|>>|[.,%\\[\\]{}()]/\n};\nPrism.languages.elixir.string.forEach(function (o) {\n  o.inside = {\n    'interpolation': {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        'delimiter': {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.elixir\n      }\n    }\n  };\n});\n/* \"prismjs/components/prism-erlang\" */\n\nPrism.languages.erlang = {\n  'comment': /%.+/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'quoted-function': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n    alias: 'function'\n  },\n  'quoted-atom': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n    alias: 'atom'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'keyword': /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n  'number': [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n  'function': /\\b[a-z][\\w@]*(?=\\()/,\n  'variable': {\n    // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n    pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n    lookbehind: true\n  },\n  'operator': [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n    // We don't want to match <<\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: true\n  }, {\n    // We don't want to match >>\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: true\n  }],\n  'atom': /\\b[a-z][\\w@]*/,\n  'punctuation': /[()[\\]{}:;,.#|]|<<|>>/\n};\n/* \"prismjs/components/prism-git\" */\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-â€“].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit_sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'string': {\n    pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-graphql\" */\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': /[a-z_]\\w*(?=\\s*:)/i,\n  'keyword': [{\n    pattern: /(fragment\\s+(?!on)[a-z_]\\w*\\s+|\\.{3}\\s*)on\\b/,\n    lookbehind: true\n  }, /\\b(?:query|fragment|mutation)\\b/],\n  'operator': /!|=|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/\n};\n/* \"prismjs/components/prism-markup-templating\" */\n\nPrism.languages['markup-templating'] = {};\nObject.defineProperties(Prism.languages['markup-templating'], {\n  buildPlaceholders: {\n    // Tokenize all inline templating expressions matching placeholderPattern\n    // If the replaceFilter function is provided, it will be called with every match.\n    // If it returns false, the match will not be replaced.\n    value: function value(env, language, placeholderPattern, replaceFilter) {\n      if (env.language !== language) {\n        return;\n      }\n\n      env.tokenStack = [];\n      env.code = env.code.replace(placeholderPattern, function (match) {\n        if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n          return match;\n        }\n\n        var i = env.tokenStack.length; // Check for existing strings\n\n        while (env.code.indexOf('___' + language.toUpperCase() + i + '___') !== -1) {\n          ++i;\n        } // Create a sparse array\n\n\n        env.tokenStack[i] = match;\n        return '___' + language.toUpperCase() + i + '___';\n      }); // Switch the grammar to markup\n\n      env.grammar = Prism.languages.markup;\n    }\n  },\n  tokenizePlaceholders: {\n    // Replace placeholders with proper tokens after tokenizing\n    value: function value(env, language) {\n      if (env.language !== language || !env.tokenStack) {\n        return;\n      } // Switch the grammar back\n\n\n      env.grammar = Prism.languages[language];\n      var j = 0;\n      var keys = Object.keys(env.tokenStack);\n\n      var walkTokens = function walkTokens(tokens) {\n        if (j >= keys.length) {\n          return;\n        }\n\n        for (var i = 0; i < tokens.length; i++) {\n          var token = tokens[i];\n\n          if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n            var k = keys[j];\n            var t = env.tokenStack[k];\n            var s = typeof token === 'string' ? token : token.content;\n            var index = s.indexOf('___' + language.toUpperCase() + k + '___');\n\n            if (index > -1) {\n              ++j;\n              var before = s.substring(0, index);\n              var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar, language), 'language-' + language, t);\n              var after = s.substring(index + ('___' + language.toUpperCase() + k + '___').length);\n              var replacement;\n\n              if (before || after) {\n                replacement = [before, middle, after].filter(function (v) {\n                  return !!v;\n                });\n                walkTokens(replacement);\n              } else {\n                replacement = middle;\n              }\n\n              if (typeof token === 'string') {\n                Array.prototype.splice.apply(tokens, [i, 1].concat(replacement));\n              } else {\n                token.content = replacement;\n              }\n\n              if (j >= keys.length) {\n                break;\n              }\n            }\n          } else if (token.content && typeof token.content !== 'string') {\n            walkTokens(token.content);\n          }\n        }\n      };\n\n      walkTokens(env.tokens);\n    }\n  }\n});\n/* \"prismjs/components/prism-handlebars\" */\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-haskell\" */\n\n\nPrism.languages.haskell = {\n  'comment': {\n    pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n    lookbehind: true\n  },\n  'char': /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n  'string': {\n    pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n  'import_statement': {\n    // The imported or hidden names are not included in this import\n    // statement. This is because we want to highlight those exactly like\n    // we do for the names in the program.\n    pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n    lookbehind: true,\n    inside: {\n      'keyword': /\\b(?:import|qualified|as|hiding)\\b/\n    }\n  },\n  // These are builtin variables only. Constructors are highlighted later as a constant.\n  'builtin': /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n  // decimal integers and floating point numbers | octal integers | hexadecimal integers\n  'number': /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n  // Most of this is needed because of the meaning of a single '.'.\n  // If it stands alone freely, it is the function composition.\n  // It may also be a separator between a module name and an identifier => no\n  // operator. If it comes together with other special characters it is an\n  // operator too.\n  'operator': /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n  // In Haskell, nearly everything is a variable, do not highlight these.\n  'hvariable': /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n  'constant': /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-java\" */\n\nPrism.languages.java = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n  'number': /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n  'operator': {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('java', 'function', {\n  'annotation': {\n    alias: 'punctuation',\n    pattern: /(^|[^.])@\\w+/,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('java', 'class-name', {\n  'generics': {\n    pattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n    alias: 'function',\n    inside: {\n      keyword: Prism.languages.java.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  }\n});\n/* \"prismjs/components/prism-json\" */\n\nPrism.languages.json = {\n  'property': /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  'punctuation': /[{}[\\]);,]/,\n  'operator': /:/g,\n  'boolean': /\\b(?:true|false)\\b/i,\n  'null': /\\bnull\\b/i\n};\nPrism.languages.jsonp = Prism.languages.json;\n/* \"prismjs/components/prism-latex\" */\n\n(function (Prism) {\n  var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n      insideEqu = {\n    'equation-command': {\n      pattern: funcPattern,\n      alias: 'regex'\n    }\n  };\n  Prism.languages.latex = {\n    'comment': /%.*/m,\n    // the verbatim environment prints whitespace to the document\n    'cdata': {\n      pattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: true\n    },\n\n    /*\n     * equations can be between $ $ or \\( \\) or \\[ \\]\n     * (all are multiline)\n     */\n    'equation': [{\n      pattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n      inside: insideEqu,\n      alias: 'string'\n    }, {\n      pattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: true,\n      inside: insideEqu,\n      alias: 'string'\n    }],\n\n    /*\n     * arguments which are keywords or references are highlighted\n     * as keywords\n     */\n    'keyword': {\n      pattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n      lookbehind: true\n    },\n\n    /*\n     * section or chapter headlines are highlighted as bold so that\n     * they stand out more\n     */\n    'headline': {\n      pattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'function': {\n      pattern: funcPattern,\n      alias: 'selector'\n    },\n    'punctuation': /[[\\]{}&]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'punctuation': /[{}();:,]/,\n  'operator': /[+\\-*\\/]/\n}); // Invert function and punctuation positions\n\nPrism.languages.insertBefore('less', 'punctuation', {\n  'function': Prism.languages.less.function\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-markdown\" */\n\nPrism.languages.markdown = Prism.languages.extend('markup', {});\nPrism.languages.insertBefore('markdown', 'prolog', {\n  'blockquote': {\n    // > ...\n    pattern: /^>(?:[\\t ]*>)*/m,\n    alias: 'punctuation'\n  },\n  'code': [{\n    // Prefixed by 4 spaces or 1 tab\n    pattern: /^(?: {4}|\\t).+/m,\n    alias: 'keyword'\n  }, {\n    // `code`\n    // ``code``\n    pattern: /``.+?``|`[^`\\n]+`/,\n    alias: 'keyword'\n  }],\n  'title': [{\n    // title 1\n    // =======\n    // title 2\n    // -------\n    pattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n    alias: 'important',\n    inside: {\n      punctuation: /==+$|--+$/\n    }\n  }, {\n    // # title 1\n    // ###### title 6\n    pattern: /(^\\s*)#+.+/m,\n    lookbehind: true,\n    alias: 'important',\n    inside: {\n      punctuation: /^#+|#+$/\n    }\n  }],\n  'hr': {\n    // ***\n    // ---\n    // * * *\n    // -----------\n    pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n    lookbehind: true,\n    alias: 'punctuation'\n  },\n  'list': {\n    // * item\n    // + item\n    // - item\n    // 1. item\n    pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n    lookbehind: true,\n    alias: 'punctuation'\n  },\n  'url-reference': {\n    // [id]: http://example.com \"Optional title\"\n    // [id]: http://example.com 'Optional title'\n    // [id]: http://example.com (Optional title)\n    // [id]: <http://example.com> \"Optional title\"\n    pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n    inside: {\n      'variable': {\n        pattern: /^(!?\\[)[^\\]]+/,\n        lookbehind: true\n      },\n      'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n      'punctuation': /^[\\[\\]!:]|[<>]/\n    },\n    alias: 'url'\n  },\n  'bold': {\n    // **strong**\n    // __strong__\n    // Allow only one line break\n    pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^\\*\\*|^__|\\*\\*$|__$/\n    }\n  },\n  'italic': {\n    // *em*\n    // _em_\n    // Allow only one line break\n    pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^[*_]|[*_]$/\n    }\n  },\n  'url': {\n    // [example](http://example.com \"Optional title\")\n    // [example] [id]\n    pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n    inside: {\n      'variable': {\n        pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n        lookbehind: true\n      },\n      'string': {\n        pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n      }\n    }\n  }\n});\nPrism.languages.markdown['bold'].inside['url'] = Prism.languages.markdown['url'];\nPrism.languages.markdown['italic'].inside['url'] = Prism.languages.markdown['url'];\nPrism.languages.markdown['bold'].inside['italic'] = Prism.languages.markdown['italic'];\nPrism.languages.markdown['italic'].inside['bold'] = Prism.languages.markdown['bold'];\n/* \"prismjs/components/prism-objectivec\" */\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'type': {\n    pattern: /\\B['`]\\w*/,\n    alias: 'variable'\n  },\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  'punctuation': /[(){}\\[\\]|_.,:;]/\n};\n/* \"prismjs/components/prism-php\" */\n\n/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n\n(function (Prism) {\n  Prism.languages.php = Prism.languages.extend('clike', {\n    'keyword': /\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n    'constant': /\\b[A-Z0-9_]{2,}\\b/,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'shell-comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    }\n  });\n  Prism.languages.insertBefore('php', 'keyword', {\n    'delimiter': {\n      pattern: /\\?>|<\\?(?:php|=)?/i,\n      alias: 'important'\n    },\n    'variable': /\\$+(?:\\w+\\b|(?={))/i,\n    'package': {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }\n  }); // Must be defined after the function pattern\n\n  Prism.languages.insertBefore('php', 'operator', {\n    'property': {\n      pattern: /(->)[\\w]+/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'nowdoc-string': {\n      pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<'?|[';]$/\n          }\n        }\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<\"?|[\";]$/\n          }\n        },\n        'interpolation': null // See below\n\n      }\n    },\n    'single-quoted-string': {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'interpolation': null // See below\n\n      }\n    }\n  }); // The different types of PHP strings \"replace\" the C-like standard string\n\n  delete Prism.languages.php['string'];\n  var string_interpolation = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n    lookbehind: true,\n    inside: {\n      rest: Prism.languages.php\n    }\n  };\n  Prism.languages.php['heredoc-string'].inside['interpolation'] = string_interpolation;\n  Prism.languages.php['double-quoted-string'].inside['interpolation'] = string_interpolation;\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/(?:<\\?php|<\\?)/ig.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /(?:<\\?php|<\\?)[\\s\\S]*?(?:\\?>|$)/ig;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);\n/* \"prismjs/components/prism-php-extras\" */\n\n\nPrism.languages.insertBefore('php', 'variable', {\n  'this': /\\$this\\b/,\n  'global': /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n  'scope': {\n    pattern: /\\b[\\w\\\\]+::/,\n    inside: {\n      keyword: /static|self|parent/,\n      punctuation: /::|\\\\/\n    }\n  }\n});\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'triple-quoted-string': {\n    pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-ruby\" */\n\n/**\n * Original by Samuel Flores\n *\n * Adds the following new token classes:\n * \t\tconstant, builtin, variable, symbol, regex\n */\n\n(function (Prism) {\n  Prism.languages.ruby = Prism.languages.extend('clike', {\n    'comment': [/#.*/, {\n      pattern: /^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m,\n      greedy: true\n    }],\n    'keyword': /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n  });\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    inside: {\n      'delimiter': {\n        pattern: /^#\\{|\\}$/,\n        alias: 'tag'\n      },\n      rest: Prism.languages.ruby\n    }\n  };\n  Prism.languages.insertBefore('ruby', 'keyword', {\n    'regex': [{\n      pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      // Here we need to specifically allow interpolation\n      pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n    'symbol': {\n      pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('ruby', 'number', {\n    'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n    'constant': /\\b[A-Z]\\w*(?:[?!]|\\b)/\n  });\n  Prism.languages.ruby.string = [{\n    pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    // Here we need to specifically allow interpolation\n    pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }];\n})(Prism);\n/* \"prismjs/components/prism-rust\" */\n\n/* TODO\n\tAdd support for Markdown notation inside doc comments\n\tAdd support for nested block comments...\n\tMatch closure params even when not followed by dash or brace\n\tAdd better support for macro definition\n*/\n\n\nPrism.languages.rust = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'string': [{\n    pattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n    greedy: true\n  }, {\n    pattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }],\n  'char': {\n    pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n    alias: 'string'\n  },\n  'lifetime-annotation': {\n    pattern: /'[^\\s>']+/,\n    alias: 'symbol'\n  },\n  'keyword': /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n  'attribute': {\n    pattern: /#!?\\[.+?\\]/,\n    greedy: true,\n    alias: 'attr-name'\n  },\n  'function': [/\\w+(?=\\s*\\()/, // Macros can use parens or brackets\n  /\\w+!(?=\\s*\\(|\\[)/],\n  'macro-rules': {\n    pattern: /\\w+!/,\n    alias: 'function'\n  },\n  // Hex, oct, bin, dec numbers with visual separators and type suffix\n  'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n  // Closure params should not be confused with bitwise OR |\n  'closure-params': {\n    pattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n    inside: {\n      'punctuation': /[|:,]/,\n      'operator': /[&*]/\n    }\n  },\n  'punctuation': /[{}[\\];(),:]|\\.+|->/,\n  'operator': /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n};\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  delete Prism.languages.sass.selector;\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)*url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.scss.property = {\n  pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,\n  inside: {\n    'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  }\n};\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': /\\bnull\\b/,\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'variable': /@[\\w.$]+|@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var inside = {\n    'url': /url\\(([\"']?).*?\\1\\)/i,\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'number': /\\b\\d+(?:\\.\\d+)?%?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'comment': {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: true,\n      inside: {\n        keyword: /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-swift\" */\n// issues: nested multiline comments\n\n\nPrism.languages.swift = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n        inside: {\n          delimiter: {\n            pattern: /^\\\\\\(|\\)$/,\n            alias: 'variable' // See rest below\n\n          }\n        }\n      }\n    }\n  },\n  'keyword': /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n  'number': /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n  'constant': /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n  'atrule': /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n  'builtin': /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n});\nPrism.languages.swift['string'].inside['interpolation'].inside.rest = Prism.languages.swift;\n/* \"prismjs/components/prism-typescript\" */\n\nPrism.languages.typescript = Prism.languages.extend('javascript', {\n  // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n  'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\\b/,\n  'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console)\\b/\n});\nPrism.languages.ts = Prism.languages.typescript;\n/* \"prismjs/components/prism-vim\" */\n\nPrism.languages.vim = {\n  'string': /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n  'comment': /\".*/,\n  'function': /\\w+(?=\\()/,\n  'keyword': /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n  'builtin': /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n  'number': /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n  'operator': /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n  'punctuation': /[{}[\\](),;:]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\nPrism.languages.yaml = {\n  'scalar': {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'comment': /#.*/,\n  'key': {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: true,\n    alias: 'atrule'\n  },\n  'directive': {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'datetime': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    alias: 'number'\n  },\n  'boolean': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'null': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'string': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    greedy: true\n  },\n  'number': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true\n  },\n  'tag': /![^\\s]+/,\n  'important': /[&*][\\w]+/,\n  'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\nexport default Prism;","import Prism from './vendor/prism';\nimport theme from '../themes/duotoneDark';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\nexport default defaultProps;","var newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].empty = true;\n  }\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = types[0] === token.type ? types : types.concat(token.type);\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var _i = 1; _i < newlineCount; _i++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[_i]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nexport default normalizeTokens;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var types = themeEntry.types,\n        languages = themeEntry.languages,\n        style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nexport default themeToDict;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport React, { Component } from \"react\";\nimport normalizeTokens from \"../utils/normalizeTokens\";\nimport themeToDict from \"../utils/themeToDict\";\n\nvar Highlight =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Highlight, _Component);\n\n  function Highlight(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.themeDict = void 0;\n\n    _this.getLineProps = function (_ref) {\n      var key = _ref.key,\n          className = _ref.className,\n          style = _ref.style,\n          line = _ref.line,\n          rest = _objectWithoutPropertiesLoose(_ref, [\"key\", \"className\", \"style\", \"line\"]);\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      if (_this.themeDict !== undefined) {\n        output.style = _this.themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) output.key = key;\n      if (className) output.className += \" \" + className;\n      return output;\n    };\n\n    _this.getStyleForToken = function (_ref2) {\n      var types = _ref2.types,\n          empty = _ref2.empty;\n      var typesSize = types.length;\n\n      if (_this.themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return _this.themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return _this.themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    };\n\n    _this.getTokenProps = function (_ref3) {\n      var key = _ref3.key,\n          className = _ref3.className,\n          style = _ref3.style,\n          token = _ref3.token,\n          rest = _objectWithoutPropertiesLoose(_ref3, [\"key\", \"className\", \"style\", \"token\"]);\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: _this.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) output.key = key;\n      if (className) output.className += \" \" + className;\n      return output;\n    };\n\n    if (props.theme) {\n      _this.themeDict = themeToDict(props.theme, props.language);\n    }\n\n    return _this;\n  }\n\n  var _proto = Highlight.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Prism = _this$props.Prism,\n        language = _this$props.language,\n        code = _this$props.code,\n        children = _this$props.children;\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? Prism.tokenize(code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: this.themeDict ? this.themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/* global global */\n\nvar KEYCODE_ENTER = 13;\nvar KEYCODE_TAB = 9;\nvar KEYCODE_BACKSPACE = 8;\nvar KEYCODE_Y = 89;\nvar KEYCODE_Z = 90;\nvar KEYCODE_M = 77;\nvar KEYCODE_PARENS = 57;\nvar KEYCODE_BRACKETS = 219;\nvar KEYCODE_QUOTE = 222;\nvar KEYCODE_BACK_QUOTE = 192;\n\nvar HISTORY_LIMIT = 100;\nvar HISTORY_TIME_GAP = 3000;\n\nvar isWindows = 'navigator' in global && /Win/i.test(navigator.platform);\nvar isMacLike = 'navigator' in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\nvar className = 'npm__react-simple-code-editor__textarea';\n\nvar cssText = /* CSS */'\\n/**\\n * Reset the text fill color so that placeholder is visible\\n */\\n.' + className + ':empty {\\n  -webkit-text-fill-color: inherit !important;\\n}\\n\\n/**\\n * IE doesn\\'t support \\'-webkit-text-fill-color\\'\\n * So we use \\'color: transparent\\' to make the text transparent on IE\\n * Unlike other browsers, it doesn\\'t affect caret color in IE\\n */\\n.' + className + '-ie {\\n  color: transparent !important;\\n}\\n\\n.' + className + '-ie::selection {\\n  background-color: #accef7 !important;\\n  color: transparent !important;\\n}\\n';\n\nvar Editor = function (_React$Component) {\n  _inherits(Editor, _React$Component);\n\n  function Editor() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Editor);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Editor.__proto__ || Object.getPrototypeOf(Editor)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      capture: true,\n      ie: false\n    }, _this._recordCurrentState = function () {\n      var input = _this._input;\n\n      if (!input) return;\n\n      // Save current state of the input\n      var value = input.value,\n          selectionStart = input.selectionStart,\n          selectionEnd = input.selectionEnd;\n\n\n      _this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      });\n    }, _this._getLines = function (text, position) {\n      return text.substring(0, position).split('\\n');\n    }, _this._recordChange = function (record) {\n      var overwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$_history = _this._history,\n          stack = _this$_history.stack,\n          offset = _this$_history.offset;\n\n\n      if (stack.length && offset > -1) {\n        // When something updates, drop the redo operations\n        _this._history.stack = stack.slice(0, offset + 1);\n\n        // Limit the number of operations to 100\n        var count = _this._history.stack.length;\n\n        if (count > HISTORY_LIMIT) {\n          var extras = count - HISTORY_LIMIT;\n\n          _this._history.stack = stack.slice(extras, count);\n          _this._history.offset = Math.max(_this._history.offset - extras, 0);\n        }\n      }\n\n      var timestamp = Date.now();\n\n      if (overwrite) {\n        var last = _this._history.stack[_this._history.offset];\n\n        if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n          // A previous entry exists and was in short interval\n\n          // Match the last word in the line\n          var re = /[^a-z0-9]([a-z0-9]+)$/i;\n\n          // Get the previous line\n          var previous = _this._getLines(last.value, last.selectionStart).pop().match(re);\n\n          // Get the current line\n          var current = _this._getLines(record.value, record.selectionStart).pop().match(re);\n\n          if (previous && current && current[1].startsWith(previous[1])) {\n            // The last word of the previous line and current line match\n            // Overwrite previous entry so that undo will remove whole word\n            _this._history.stack[_this._history.offset] = _extends({}, record, { timestamp: timestamp });\n\n            return;\n          }\n        }\n      }\n\n      // Add the new operation to the stack\n      _this._history.stack.push(_extends({}, record, { timestamp: timestamp }));\n      _this._history.offset++;\n    }, _this._updateInput = function (record) {\n      var input = _this._input;\n\n      if (!input) return;\n\n      // Update values and selection state\n      input.value = record.value;\n      input.selectionStart = record.selectionStart;\n      input.selectionEnd = record.selectionEnd;\n\n      _this.props.onValueChange(record.value);\n    }, _this._applyEdits = function (record) {\n      // Save last selection state\n      var input = _this._input;\n      var last = _this._history.stack[_this._history.offset];\n\n      if (last && input) {\n        _this._history.stack[_this._history.offset] = _extends({}, last, {\n          selectionStart: input.selectionStart,\n          selectionEnd: input.selectionEnd\n        });\n      }\n\n      // Save the changes\n      _this._recordChange(record);\n      _this._updateInput(record);\n    }, _this._undoEdit = function () {\n      var _this$_history2 = _this._history,\n          stack = _this$_history2.stack,\n          offset = _this$_history2.offset;\n\n      // Get the previous edit\n\n      var record = stack[offset - 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        _this._updateInput(record);\n        _this._history.offset = Math.max(offset - 1, 0);\n      }\n    }, _this._redoEdit = function () {\n      var _this$_history3 = _this._history,\n          stack = _this$_history3.stack,\n          offset = _this$_history3.offset;\n\n      // Get the next edit\n\n      var record = stack[offset + 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        _this._updateInput(record);\n        _this._history.offset = Math.min(offset + 1, stack.length - 1);\n      }\n    }, _this._handleKeyDown = function (e) {\n      var _this$props = _this.props,\n          tabSize = _this$props.tabSize,\n          insertSpaces = _this$props.insertSpaces,\n          ignoreTabKey = _this$props.ignoreTabKey;\n      var _e$target = e.target,\n          value = _e$target.value,\n          selectionStart = _e$target.selectionStart,\n          selectionEnd = _e$target.selectionEnd;\n\n\n      var tabCharacter = (insertSpaces ? ' ' : '     ').repeat(tabSize);\n\n      if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && _this.state.capture) {\n        // Prevent focus change\n        e.preventDefault();\n\n        if (e.shiftKey) {\n          // Unindent selected lines\n          var linesBeforeCaret = _this._getLines(value, selectionStart);\n          var startLine = linesBeforeCaret.length - 1;\n          var endLine = _this._getLines(value, selectionEnd).length - 1;\n          var nextValue = value.split('\\n').map(function (line, i) {\n            if (i >= startLine && i <= endLine && line.startsWith(tabCharacter)) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          }).join('\\n');\n\n          if (value !== nextValue) {\n            var startLineText = linesBeforeCaret[startLine];\n\n            _this._applyEdits({\n              value: nextValue,\n              // Move the start cursor if first line in selection was modified\n              // It was modified only if it started with a tab\n              selectionStart: startLineText.startsWith(tabCharacter) ? selectionStart - tabCharacter.length : selectionStart,\n              // Move the end cursor by total number of characters removed\n              selectionEnd: selectionEnd - (value.length - nextValue.length)\n            });\n          }\n        } else if (selectionStart !== selectionEnd) {\n          // Indent selected lines\n          var _linesBeforeCaret = _this._getLines(value, selectionStart);\n          var _startLine = _linesBeforeCaret.length - 1;\n          var _endLine = _this._getLines(value, selectionEnd).length - 1;\n          var _startLineText = _linesBeforeCaret[_startLine];\n\n          _this._applyEdits({\n            value: value.split('\\n').map(function (line, i) {\n              if (i >= _startLine && i <= _endLine) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            }).join('\\n'),\n            // Move the start cursor by number of characters added in first line of selection\n            // Don't move it if it there was no text before cursor\n            selectionStart: /\\S/.test(_startLineText) ? selectionStart + tabCharacter.length : selectionStart,\n            // Move the end cursor by total number of characters added\n            selectionEnd: selectionEnd + tabCharacter.length * (_endLine - _startLine + 1)\n          });\n        } else {\n          var updatedSelection = selectionStart + tabCharacter.length;\n\n          _this._applyEdits({\n            // Insert tab character at caret\n            value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_BACKSPACE) {\n        var hasSelection = selectionStart !== selectionEnd;\n        var textBeforeCaret = value.substring(0, selectionStart);\n\n        if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n          // Prevent default delete behaviour\n          e.preventDefault();\n\n          var _updatedSelection = selectionStart - tabCharacter.length;\n\n          _this._applyEdits({\n            // Remove tab character at caret\n            value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: _updatedSelection,\n            selectionEnd: _updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_ENTER) {\n        // Ignore selections\n        if (selectionStart === selectionEnd) {\n          // Get the current line\n          var line = _this._getLines(value, selectionStart).pop();\n          var matches = line.match(/^\\s+/);\n\n          if (matches && matches[0]) {\n            e.preventDefault();\n\n            // Preserve indentation on inserting a new line\n            var indent = '\\n' + matches[0];\n            var _updatedSelection2 = selectionStart + indent.length;\n\n            _this._applyEdits({\n              // Insert indentation character at caret\n              value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\n              // Update caret position\n              selectionStart: _updatedSelection2,\n              selectionEnd: _updatedSelection2\n            });\n          }\n        }\n      } else if (e.keyCode === KEYCODE_PARENS || e.keyCode === KEYCODE_BRACKETS || e.keyCode === KEYCODE_QUOTE || e.keyCode === KEYCODE_BACK_QUOTE) {\n        var chars = void 0;\n\n        if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n          chars = ['(', ')'];\n        } else if (e.keyCode === KEYCODE_BRACKETS) {\n          if (e.shiftKey) {\n            chars = ['{', '}'];\n          } else {\n            chars = ['[', ']'];\n          }\n        } else if (e.keyCode === KEYCODE_QUOTE) {\n          if (e.shiftKey) {\n            chars = ['\"', '\"'];\n          } else {\n            chars = [\"'\", \"'\"];\n          }\n        } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n          chars = ['`', '`'];\n        }\n\n        // If text is selected, wrap them in the characters\n        if (selectionStart !== selectionEnd && chars) {\n          e.preventDefault();\n\n          _this._applyEdits({\n            value: value.substring(0, selectionStart) + chars[0] + value.substring(selectionStart, selectionEnd) + chars[1] + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd + 2\n          });\n        }\n      } else if ((isMacLike ? // Trigger undo with âŒ˜+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z : // Trigger undo with Ctrl+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z) && !e.shiftKey && !e.altKey) {\n        e.preventDefault();\n\n        _this._undoEdit();\n      } else if ((isMacLike ? // Trigger redo with âŒ˜+Shift+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey : isWindows ? // Trigger redo with Ctrl+Y on Windows\n      e.ctrlKey && e.keyCode === KEYCODE_Y : // Trigger redo with Ctrl+Shift+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) && !e.altKey) {\n        e.preventDefault();\n\n        _this._redoEdit();\n      } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\n        e.preventDefault();\n\n        // Toggle capturing tab key so users can focus away\n        _this.setState(function (state) {\n          return {\n            capture: !state.capture\n          };\n        });\n      }\n    }, _this._handleChange = function (e) {\n      var _e$target2 = e.target,\n          value = _e$target2.value,\n          selectionStart = _e$target2.selectionStart,\n          selectionEnd = _e$target2.selectionEnd;\n\n\n      _this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      }, true);\n\n      _this.props.onValueChange(value);\n    }, _this._history = {\n      stack: [],\n      offset: -1\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Editor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (/Trident/.test(navigator.userAgent)) {\n        // The browser is Internet Explorer\n        // eslint-disable-next-line react/no-did-mount-set-state\n        this.setState({ ie: true });\n      }\n\n      this._recordCurrentState();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          value = _props.value,\n          style = _props.style,\n          padding = _props.padding,\n          highlight = _props.highlight,\n          autoFocus = _props.autoFocus,\n          disabled = _props.disabled,\n          form = _props.form,\n          maxLength = _props.maxLength,\n          minLength = _props.minLength,\n          name = _props.name,\n          placeholder = _props.placeholder,\n          readOnly = _props.readOnly,\n          required = _props.required,\n          onFocus = _props.onFocus,\n          onBlur = _props.onBlur,\n          onValueChange = _props.onValueChange,\n          tabSize = _props.tabSize,\n          insertSpaces = _props.insertSpaces,\n          ignoreTabKey = _props.ignoreTabKey,\n          rest = _objectWithoutProperties(_props, ['value', 'style', 'padding', 'highlight', 'autoFocus', 'disabled', 'form', 'maxLength', 'minLength', 'name', 'placeholder', 'readOnly', 'required', 'onFocus', 'onBlur', 'onValueChange', 'tabSize', 'insertSpaces', 'ignoreTabKey']);\n\n      var contentStyle = {\n        paddingTop: padding,\n        paddingRight: padding,\n        paddingBottom: padding,\n        paddingLeft: padding\n      };\n\n      var highlighted = highlight(value);\n\n      return React.createElement(\n        'div',\n        _extends({}, rest, { style: _extends({}, styles.container, style) }),\n        React.createElement('textarea', {\n          ref: function ref(c) {\n            return _this2._input = c;\n          },\n          style: _extends({}, styles.editor, styles.textarea, contentStyle),\n          className: className + ' ' + (this.state.ie ? className + '-ie' : ''),\n          value: value,\n          onChange: this._handleChange,\n          onKeyDown: this._handleKeyDown,\n          onFocus: onFocus,\n          onBlur: onBlur,\n          disabled: disabled,\n          form: form,\n          maxLength: maxLength,\n          minLength: minLength,\n          name: name,\n          placeholder: placeholder,\n          readOnly: readOnly,\n          required: required,\n          autoFocus: autoFocus,\n          autoCapitalize: 'off',\n          autoComplete: 'off',\n          autoCorrect: 'off',\n          spellCheck: false,\n          'data-gramm': false\n        }),\n        React.createElement('pre', _extends({\n          'aria-hidden': 'true',\n          style: _extends({}, styles.editor, styles.highlight, contentStyle)\n        }, typeof highlighted === 'string' ? { dangerouslySetInnerHTML: { __html: highlighted + '<br />' } } : { children: highlighted })),\n        React.createElement(\n          'style',\n          { type: 'text/css' },\n          cssText\n        )\n      );\n    }\n  }, {\n    key: 'session',\n    get: function get() {\n      return {\n        history: this._history\n      };\n    },\n    set: function set(session) {\n      this._history = session.history;\n    }\n  }]);\n\n  return Editor;\n}(React.Component);\n\nEditor.defaultProps = {\n  tabSize: 2,\n  insertSpaces: true,\n  ignoreTabKey: false,\n  padding: 0\n};\nexports.default = Editor;\n\n\nvar styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    boxSizing: 'border-box',\n    padding: 0\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    margin: 0,\n    border: 0,\n    resize: 'none',\n    background: 'none',\n    overflow: 'hidden',\n    color: 'inherit',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent'\n  },\n  highlight: {\n    position: 'relative',\n    margin: 0,\n    border: 0,\n    pointerEvents: 'none'\n  },\n  editor: {\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'inherit',\n    wordBreak: 'inherit'\n  }\n};\n//# sourceMappingURL=index.js.map","import React, {\n  useEffect,\n  useContext,\n  useState,\n  useRef,\n  useReducer,\n  useMemo,\n  useCallback,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport CodeEditor from 'react-simple-code-editor'\n\nfunction render(element) {\n  ReactDOM.render(element, document.querySelector('[data-react-preview-editor=\"preview\"]'))\n}\n\nconst defaultScope = {\n  React,\n  Fragment: React.Fragment,\n  Component: React.Component,\n  render,\n  useEffect,\n  useContext,\n  useState,\n  useRef,\n  useReducer,\n  useMemo,\n  useCallback,\n}\n\nconst codeContext = React.createContext({\n  code: '',\n  scope: defaultScope,\n  transformCode(code) {\n    return code\n  },\n  dispatch() {},\n})\n\nconst TYPES = {\n  ERROR: 'error',\n  EDIT: 'edit',\n}\n\nconst initialState = { initialCode: '', code: '', error: null }\n\nfunction reducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case TYPES.ERROR:\n      return {\n        ...state,\n        error: payload,\n      }\n    case TYPES.EDIT:\n      return {\n        ...state,\n        code: payload,\n      }\n    default: {\n      return state\n    }\n  }\n}\n\nexport function Provider({ code, transformCode, scope, children }) {\n  const [state, dispatch] = useReducer(reducer, {\n    code,\n    initialCode: code,\n    error: null,\n  })\n\n  const ctx = {\n    ...state,\n    scope: { ...defaultScope, ...scope },\n    dispatch,\n    transformCode,\n  }\n  return <codeContext.Provider value={ctx}>{children}</codeContext.Provider>\n}\n\nProvider.defaultProps = {\n  transformCode(code) {\n    return code\n  },\n  scope: defaultScope,\n}\n\nexport function Preview(props) {\n  const { code, scope, transformCode, dispatch, error } = useContext(codeContext)\n  useEffect(() => {\n    if (error) {\n      return\n    }\n    let transformed = transformCode(code)\n    const func = new Function(...Object.keys(scope), transformed)\n    func(...Object.values(scope))\n  }, [code, scope, transformCode, error])\n  return <div {...props} data-react-preview-editor=\"preview\" />\n}\n\nexport function Editor({ getHighlighterProps, ...props }) {\n  const { code, dispatch } = useContext(codeContext)\n\n  return (\n    <CodeEditor\n      value={code}\n      onValueChange={code => dispatch({ type: TYPES.EDIT, payload: code })}\n      highlight={code => (\n        <Highlight\n          {...getHighlighterProps({\n            ...defaultProps,\n            code,\n            language: 'jsx',\n          })}\n        >\n          {({ className, style, tokens, getLineProps, getTokenProps }) => (\n            <React.Fragment>\n              {tokens.map((line, i) => (\n                <div {...getLineProps({ line, key: i })}>\n                  {line.map((token, key) => (\n                    <span {...getTokenProps({ token, key })} />\n                  ))}\n                </div>\n              ))}\n            </React.Fragment>\n          )}\n        </Highlight>\n      )}\n      {...props}\n    />\n  )\n}\n\nEditor.defaultProps = {\n  getHighlighterProps(props) {\n    return props\n  },\n}\n"],"names":["uniqueId","_","Token","funcPattern","insideEqu","Prism","util","encode","tokens","type","content","alias","map","replace","o","Object","prototype","toString","call","match","objId","obj","defineProperty","value","clone","visited","key","hasOwnProperty","forEach","v","i","languages","extend","id","redef","lang","insertBefore","inside","before","insert","root","grammar","arguments","length","newToken","ret","token","DFS","this","callback","plugins","highlight","text","language","env","code","tokenize","stringify","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","exec","from","to","k","p","len","delNum","slice","after","args","push","wrapped","Array","splice","apply","hooks","add","rest","matchedStr","parent","element","join","tag","classes","attributes","aliases","keys","name","default","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","xml","html","mathml","svg","insideString","variable","number","operator","bash","shebang","string","function","keyword","boolean","shell","clike","class-name","c","macro","directive","constant","cpp","raw-string","css","atrule","rule","url","selector","property","important","style","style-attr","javascript","regex","function-variable","template-string","interpolation","interpolation-punctuation","script","js","jsx","spread","script-punctuation","stringifyToken","walkTokens","openedTags","notTagNorBrace","tagName","pop","openedBraces","plainText","coffeescript","class-member","multiline-comment","block-regex","inline-javascript","delimiter","multiline-string","actionscript","pseudo-element","pseudo-class","class","attribute","hexcode","diff","coord","deleted","inserted","docker","dockerfile","elixir","atom","capture","argument","erlang","quoted-function","quoted-atom","git","command","parameter","commit_sha1","go","builtin","graphql","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","indexOf","toUpperCase","tokenizePlaceholders","t","s","replacement","substring","middle","filter","concat","handlebars","block","brackets","haskell","char","import_statement","hvariable","java","annotation","generics","json","null","jsonp","latex","equation","equation-command","headline","less","mixin-usage","makefile","symbol","markdown","blockquote","title","hr","list","url-reference","bold","italic","objectivec","ocaml","php","shell-comment","package","nowdoc-string","heredoc-string","single-quoted-string","double-quoted-string","string_interpolation","test","scope","python","triple-quoted-string","reason","character","constructor","label","ruby","rust","lifetime-annotation","macro-rules","closure-params","sass","atrule-line","variable-line","property-line","scss","placeholder","statement","sql","func","stylus","atrule-declaration","variable-declaration","property-declaration","swift","typescript","ts","vim","yaml","scalar","datetime","defaultProps","theme","newlineRe","normalizeEmptyLines","line","types","empty","_extends","assign","themeToDict","plain","base","create","themeDict","styles","reduce","acc","themeEntry","includes","accStyle","backgroundColor","_objectWithoutPropertiesLoose","excluded","sourceKeys","Highlight","_Component","subClass","superClass","props","_this","getLineProps","_ref","className","output","undefined","getStyleForToken","_ref2","typesSize","display","baseStyle","typeStyles","getTokenProps","_ref3","children","__proto__","render","_this$props","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","_i","normalizeTokens","Component","exports","_createClass","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","React","__esModule","newObj","_interopRequireWildcard","_react","_possibleConstructorReturn","self","ReferenceError","KEYCODE_ENTER","KEYCODE_TAB","KEYCODE_BACKSPACE","KEYCODE_Y","KEYCODE_Z","KEYCODE_M","KEYCODE_PARENS","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","navigator","platform","isMacLike","Editor","_React$Component","_temp","instance","TypeError","_classCallCheck","_len","_key","getPrototypeOf","state","ie","_recordCurrentState","input","_input","_recordChange","selectionStart","selectionEnd","_getLines","position","record","overwrite","_this$_history","_history","stack","offset","count","extras","Math","max","timestamp","Date","now","last","re","previous","current","startsWith","_updateInput","onValueChange","_applyEdits","_undoEdit","_this$_history2","_redoEdit","_this$_history3","min","_handleKeyDown","e","ignoreTabKey","_e$target","tabCharacter","insertSpaces","repeat","tabSize","keyCode","preventDefault","shiftKey","linesBeforeCaret","startLine","endLine","nextValue","_linesBeforeCaret","_startLine","_endLine","_startLineText","updatedSelection","hasSelection","endsWith","_updatedSelection","matches","indent","_updatedSelection2","chars","metaKey","ctrlKey","altKey","setState","_handleChange","_e$target2","setPrototypeOf","_inherits","userAgent","_this2","_props","padding","autoFocus","disabled","form","maxLength","minLength","readOnly","required","onFocus","onBlur","_objectWithoutProperties","contentStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","highlighted","createElement","container","ref","editor","textarea","onChange","onKeyDown","autoCapitalize","autoComplete","autoCorrect","spellCheck","data-gramm","aria-hidden","dangerouslySetInnerHTML","__html","get","history","set","session","textAlign","whiteSpace","wordBreak","boxSizing","top","left","height","width","margin","border","resize","background","overflow","color","MozOsxFontSmoothing","WebkitFontSmoothing","WebkitTextFillColor","pointerEvents","fontFamily","fontSize","fontStyle","fontVariantLigatures","fontWeight","letterSpacing","lineHeight","textIndent","textRendering","textTransform","defaultScope","Fragment","ReactDOM","document","querySelector","useEffect","useContext","useState","useRef","useReducer","useMemo","useCallback","codeContext","createContext","transformCode","dispatch","TYPES","ERROR","EDIT","initialState","initialCode","error","reducer","payload","Provider","ctx","Preview","transformed","Function","values","getHighlighterProps","CodeEditor"],"mappings":"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"}